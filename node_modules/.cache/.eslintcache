[{"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\index.js":"1","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\reportWebVitals.js":"2","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\App.js":"3","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\redux\\store.js":"4","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\styles\\globalStyles.js":"5","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\redux\\blockchain\\blockchainActions.js":"6","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\redux\\data\\dataActions.js":"7","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\comp\\LipRenderer.js":"8","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\redux\\data\\dataReducer.js":"9","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\redux\\blockchain\\blockchainReducer.js":"10","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\parts\\parts.js":"11","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\comp\\NavMenu.js":"12","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\comp\\Dashboard.js":"13"},{"size":741,"mtime":1642197255241,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1639471542000,"results":"16","hashOfConfig":"15"},{"size":7340,"mtime":1642199398043,"results":"17","hashOfConfig":"15"},{"size":562,"mtime":1639471542000,"results":"18","hashOfConfig":"15"},{"size":2567,"mtime":1640545963653,"results":"19","hashOfConfig":"15"},{"size":2728,"mtime":1639932123897,"results":"20","hashOfConfig":"15"},{"size":937,"mtime":1639471542000,"results":"21","hashOfConfig":"15"},{"size":2178,"mtime":1642180059298,"results":"22","hashOfConfig":"15"},{"size":876,"mtime":1639471542000,"results":"23","hashOfConfig":"15"},{"size":992,"mtime":1639471542000,"results":"24","hashOfConfig":"15"},{"size":2446,"mtime":1640539162623,"results":"25","hashOfConfig":"15"},{"size":1121,"mtime":1642194120225,"results":"26","hashOfConfig":"15"},{"size":6610,"mtime":1642198854066,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1attjhi",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\index.js",[],"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\reportWebVitals.js",[],["59","60"],"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\App.js",["61","62","63","64","65","66"],"// Importaciones\nimport React, {useEffect, useState } from \"react\";\nimport './App.css';\nimport {useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport LipRenderer from \"./comp/LipRenderer\";\nimport _color from \"./assets/images/bg/_color.png\";\n\nfunction App() {\n\n  // Primeros pasos en la carga de la información\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.data);\n  const [loading, setLoading] = useState(false);\n  const blockchain = useSelector((state) => state.blockchain);\n  console.log(data);\n \n\n\n  const  generateRandomString = (num) => {\n    //const characters ='ABECIDOFUGAHEJIKOLUMANEIPOQURASETIVOWUXAYEZI';\n    const characters ='ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let result1= ' ';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < num; i++ ) {\n        result1 += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    \n    return result1;\n}\n\n\n  // Mint de un nuevo Token NFT\n  const mintNFT = async (_account, _name, cant) => {\n    setLoading(true);\n    blockchain.lipToken.methods.createRandomLip(_name, cant).send({\n      from: _account,\n      value: blockchain.web3.utils.toWei(cant, \"ether\"),\n    }).once(\"error\", (err) => {\n      setLoading(false);\n      console.log(err);\n    }).then((receipt) => {\n      setLoading(false);\n      console.log(receipt);\n      dispatch(fetchData(blockchain.account));\n    });\n  };\n\n\n  const mintNFT2 = async (_account, _name, cant) => {\n    setLoading(true);\n    blockchain.lipToken.methods.createRandomLip(_name, cant).send({\n      from: _account,\n      value: blockchain.web3.utils.toWei(\"2\", \"ether\"),\n    }).once(\"error\", (err) => {\n      setLoading(false);\n      console.log(err);\n    }).then((receipt) => {\n      setLoading(false);\n      console.log(receipt);\n      dispatch(fetchData(blockchain.account));\n    });\n  };\n\n  const mintNFT3 = async (_account, _name, cant) => {\n    setLoading(true);\n    blockchain.lipToken.methods.createRandomLip(_name, cant).send({\n      from: _account,\n      value: blockchain.web3.utils.toWei(\"3\", \"ether\"),\n    }).once(\"error\", (err) => {\n      setLoading(false);\n      console.log(err);\n    }).then((receipt) => {\n      setLoading(false);\n      console.log(receipt);\n      dispatch(fetchData(blockchain.account));\n    });\n  };\n\n///////////////////////  habilidad fuerza defenza y poder de pelea\n\n  // Visualizar el balance del Smart Contract\n  const balanceSmartContract = async () => {\n    setLoading(true);\n    const money = blockchain.lipToken.methods.moneySmartContract().call();\n    money.then(value => {\n      alert(parseFloat(value/1000000000000000000))})\n      console.log(money)\n  };\n\n  // Obtención del dinero por el Owner del Smart Contract\n  const ethersOwner = async (_account) => {\n    setLoading(true);\n    blockchain.lipToken.methods.withdraw().send({\n      from: _account,\n    }).once(\"error\", (err) => {\n      setLoading(false);\n      console.log(err);\n    }).then((receipt) => {\n      setLoading(false);\n      console.log(receipt);\n      dispatch(fetchData(blockchain.account));\n    });\n  };\n\n  // Recurso: https://es.reactjs.org/docs/hooks-effect.html\n  // De forma similar a componentDidMount y componentDidUpdate\n  useEffect (() => {\n    if(blockchain.account != \"\" && blockchain.lipToken != null){\n      dispatch(fetchData(blockchain.account));\n    }\n  }, [blockchain.lipToken]);\n  \n  // Visualización del Videojuego NFT \n  return (\n    <div className=\"container-fluid\">\n    <s.Screen image={_color}>\n      {blockchain.account === \"\" || blockchain.lipToken === null ? (\n        <s.Container flex = {1} ai = {\"center\"} jc = {\"center\"}>\n          <s.TextTitle> ¡AniMons Game, Juego NFT de Batallas Epicas!</s.TextTitle>\n          <s.SpacerSmall/>\n        <s.Button1 \n          onClick = {(e) => {\n          e.preventDefault();\n          dispatch(connect());\n        }}> \n        CONECTAR  \n        </s.Button1>\n        <s.SpacerSmall/>\n        {blockchain.errorMsg != \"\" ? ( \n          <s.TextDescription>{blockchain.errorMsg}</s.TextDescription> ) : null}\n        </s.Container> ) : (\n          <s.Container ai = {\"center\"} style = {{padding: \"24px\"}}>\n          <s.TextTitle> ¡Bienvenido al Videojuego NFT! </s.TextTitle>\n          <s.SpacerSmall/>\n          \n          <s.Button2 \n          \n           onClick = {(e) => {\n             e.preventDefault();\n             const name = \" AniMons-\"+generateRandomString(4);\n             const cant = '1';\n             mintNFT(blockchain.account, name, cant)\n           }} > \n           Crear Nuevo NFT \n           </s.Button2>\n\n\n          <s.Button2           \n           onClick = {(e) => {\n             e.preventDefault();\n             const name = \" AniMons-\"+generateRandomString(4);\n             const cant = '3';\n             mintNFT(blockchain.account, name, cant)\n           }} > \n           Crear Nuevo Pack de 3 NFT \n           </s.Button2>\n\n                  \n          <s.Button2 \n           onClick = {(e) => {\n             e.preventDefault();\n             const name = \" AniMons-\"+generateRandomString(4) \n             const cant = '4';\n             mintNFT(blockchain.account, name, cant)\n           }} > \n           Crear Nuevo Pack de 4 NFT \n           </s.Button2>\n                 \n          <s.Button2 \n           onClick = {(e) => {\n             e.preventDefault();\n             const name = \" AniMons-\"+generateRandomString(4) \n             const cant = '5';\n             mintNFT(blockchain.account, name, cant)\n           }} > \n          Crear Nuevo Pack de 5 NFT \n           </s.Button2>\n\n          <s.Container jc = {\"center\"} fd = {\"row\"} style = {{flexWrap: \"wrap\"}} >\n            {data.allLips.map((item, index) => {\n              \n              return ( \n               \n                <s.Container key = {index} style = {{padding: \"15px\"}} >\n                  \n                  <LipRenderer lip = {item} />\n                  \n                  <s.SpacerXSmall/>                \n\n                    <div>{item.name}</div>                                                                                             \n                    <div>Vida: {item.vida}</div>                \n                    <div>Nivel: {item.level}</div>\n                    <div>Fuerza: {item.fuerza}</div>                    \n                                       \n                    <div>Defenza: {item.defenza}</div>\n                    <div>Habilidad: {item.habil}</div>                                      \n                    <div>Poder de Pelea: {item.poder}</div>\n                                               \n                  </s.Container>\n              );\n            })}\n          </s.Container>\n          \n          <s.Button4\n            onClick = {(e) => {\n              e.preventDefault();\n              balanceSmartContract();\n            }}>\n              BALANCE DEL SMART CONTRACT\n            </s.Button4>\n\n          <s.Button4\n            onClick = {(e) => {\n              e.preventDefault();\n              ethersOwner(blockchain.account);\n            }}>\n              RETIRAR DINERO\n            </s.Button4>\n            </s.Container>\n        )}\n    </s.Screen> \n    </div>\n  );\n}\n\n\nexport default App;\n","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\redux\\store.js",[],"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\styles\\globalStyles.js",[],"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\redux\\blockchain\\blockchainActions.js",["67"],"import Web3 from \"web3\"\nimport LipToken from \"../../contracts/LipToken.json\"\nimport { fetchData } from \"../data/dataActions\"\n\nconst connectRequest = () => {\n    return {\n        type: \"CONNECTION_REQUEST\",\n    };\n};\n\nconst connectSuccess = (payload) => {\n    return {\n        type: \"CONNECTION_SUCCESS\",\n        payload: payload,\n    };\n};\n\nconst connectFailed = (payload) => {\n    return {\n        type: \"CONNECTION_FAILED\",\n        payload: payload,\n    };\n};\n\nconst updateAccountRequest = (payload) => {\n    return {\n        type: \"UPDATE_ACCOUNT\",\n        payload: payload,\n    };\n};\n\nexport const connect = () => {\n    return async (dispatch) => {\n        dispatch(connectRequest());\n        if(window.ethereum) {\n            let web3 = new Web3(window.ethereum);\n            try {\n                const accounts = await window.ethereum.request({method: \"eth_accounts\",});\n                console.log(accounts);\n                const networkId = await window.ethereum.request({method: \"net_version\", });\n                console.log(networkId);\n                // ID de la Blockchain de despliegue\n                // Ganache -> 5777\n                // BSC Testnet -> 97\n                // MATIC/Polygon -> 80001\n                // Rinkeby -> 4\n                if (networkId == 5777) {\n                    const networkData = LipToken.networks[networkId];\n                    const abi = LipToken.abi;\n                    const address = networkData.address;\n                    const lipToken = new web3.eth.Contract(abi, address);\n                    console.log(lipToken);\n                    dispatch(\n                        connectSuccess({\n                            account: accounts[0],\n                            lipToken: lipToken,\n                            web3: web3,\n                        })\n                    );\n\n                    window.ethereum.on(\"accountsChanged\", (accounts) => {\n                        dispatch(updateAccount(accounts[0]));\n                    });\n\n                    window.ethereum.on(\"chainChanged\", () => {\n                        window.location.reload();\n                    });\n                } else {\n                    dispatch(connectFailed(\"¡El Smart Contract no se ha desplegado en la red!\"));\n                    } \n                } catch(err) {\n                    dispatch(connectFailed(\"¡Algo ha salido mal!\"))\n                }\n            } else {\n                dispatch(connectFailed(\"¡Instala Metamask!\"))\n            }\n        };\n    };\n\n    export const updateAccount = (account) => {\n        return async (dispatch) => {\n            dispatch(updateAccountRequest({account: account}));\n            dispatch(fetchData(account));\n        };\n    };\n","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\redux\\data\\dataActions.js",[],"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\comp\\LipRenderer.js",[],"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\redux\\data\\dataReducer.js",[],"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\redux\\blockchain\\blockchainReducer.js",[],"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\parts\\parts.js",[],"C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\comp\\NavMenu.js",["68","69","70","71","72"],"\r\nimport React from \"react\";\r\nconst NavMenu = () => {    \r\n    return (\r\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">Features</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>          \r\n    );\r\n};\r\n\r\nexport default NavMenu","C:\\Users\\digit\\OneDrive\\Escritorio\\NFT-V3\\src\\comp\\Dashboard.js",["73","74","75"],"\r\nimport React, {useEffect, useState } from \"react\";\r\n//import './App.css';\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\nimport * as s from \"../styles/globalStyles\";\r\nimport LipRenderer from \"../comp/LipRenderer\";\r\nimport _color from \"../assets/images/bg/_color.png\";\r\n\r\n\r\nconst Dashboard = () => {  \r\n    \r\n            const dispatch = useDispatch();\r\n            const data = useSelector((state) => state.data);\r\n            const [loading, setLoading] = useState(false);\r\n            const blockchain = useSelector((state) => state.blockchain);\r\n            console.log(data);\r\n\r\n\r\n\r\n            // Subir nivel de un Token NFT\r\n  const levelUpLip = async (_account, _id) => {\r\n    setLoading(true);\r\n    blockchain.lipToken.methods.levelUp(_id).send({     \r\n      value: blockchain.web3.utils.toWei(\"0.2\", \"ether\"),\r\n      from: _account,\r\n    }).once(\"error\", (err) => {\r\n      setLoading(false);\r\n      console.log(err);\r\n    }).then((receipt) => {\r\n      setLoading(false);\r\n      console.log(receipt);\r\n      dispatch(fetchData(blockchain.account));\r\n    });\r\n  };\r\n\r\n  // Subir vida de un Token NFT\r\n  const vidaUpLip = async (_account, _id) => {\r\n    setLoading(true);\r\n    blockchain.lipToken.methods.vidaUp(_id).send({     \r\n      value: blockchain.web3.utils.toWei(\"0.3\", \"ether\"),\r\n      from: _account,\r\n    }).once(\"error\", (err) => {\r\n      setLoading(false);\r\n      console.log(err);\r\n    }).then((receipt) => {\r\n      setLoading(false);\r\n      console.log(receipt);\r\n      dispatch(fetchData(blockchain.account));\r\n    });\r\n  };\r\n\r\n///////////////////////  habilidad fuerza defenza y poder de pelea\r\n\r\n\r\n// Subir habilidad de un Token NFT\r\nconst habilUpLip = async (_account, _id) => {\r\n  setLoading(true);\r\n  blockchain.lipToken.methods.habilUp(_id).send({     \r\n    value: blockchain.web3.utils.toWei(\"0.1\", \"ether\"),\r\n    from: _account,\r\n  }).once(\"error\", (err) => {\r\n    setLoading(false);\r\n    console.log(err);\r\n  }).then((receipt) => {\r\n    setLoading(false);\r\n    console.log(receipt);\r\n    dispatch(fetchData(blockchain.account));\r\n  });\r\n};\r\n\r\n// Subir defenza de un Token NFT\r\nconst defenzaUpLip = async (_account, _id) => {\r\n  setLoading(true);\r\n  blockchain.lipToken.methods.defenzaUp(_id).send({     \r\n    value: blockchain.web3.utils.toWei(\"0.2\", \"ether\"),\r\n    from: _account,\r\n  }).once(\"error\", (err) => {\r\n    setLoading(false);\r\n    console.log(err);\r\n  }).then((receipt) => {\r\n    setLoading(false);\r\n    console.log(receipt);\r\n    dispatch(fetchData(blockchain.account));\r\n  });\r\n};\r\n\r\n\r\n// Subir fuerza de un Token NFT\r\nconst fuerzaUpLip = async (_account, _id) => {\r\n  setLoading(true);\r\n  blockchain.lipToken.methods.fuerzaUp(_id).send({     \r\n    value: blockchain.web3.utils.toWei(\"0.5\", \"ether\"),\r\n    from: _account,\r\n  }).once(\"error\", (err) => {\r\n    setLoading(false);\r\n    console.log(err);\r\n  }).then((receipt) => {\r\n    setLoading(false);\r\n    console.log(receipt);\r\n    dispatch(fetchData(blockchain.account));\r\n  });\r\n};\r\n\r\n\r\n// Subir poder de un Token NFT\r\nconst poderUpLip = async (_account, _id) => {\r\n  setLoading(true);\r\n  blockchain.lipToken.methods.poderUp(_id).send({     \r\n    value: blockchain.web3.utils.toWei(\"0.5\", \"ether\"),\r\n    from: _account,\r\n  }).once(\"error\", (err) => {\r\n    setLoading(false);\r\n    console.log(err);\r\n  }).then((receipt) => {\r\n    setLoading(false);\r\n    console.log(receipt);\r\n    dispatch(fetchData(blockchain.account));\r\n  });\r\n};\r\n\r\n\r\n    return (\r\n        <s.Container jc = {\"center\"} fd = {\"row\"} style = {{flexWrap: \"wrap\"}} >\r\n        {data.allOwnerLips.map((item, index) => {\r\n          \r\n          return ( \r\n           \r\n            <s.Container key = {index} style = {{padding: \"15px\"}} >\r\n              \r\n              <LipRenderer lip = {item} />\r\n              \r\n              <s.SpacerXSmall/>\r\n                <div>{item.name}</div>                                                                                             \r\n                <div>Vida: {item.vida}</div>                \r\n                <div>Nivel: {item.level}</div>\r\n                <div>Fuerza: {item.fuerza}</div>                    \r\n                <div>Defenza: {item.defenza}</div>\r\n                <div>Habilidad: {item.habil}</div>                                      \r\n                <div>Poder de Pelea: {item.poder}</div>  \r\n\r\n                <s.Button3\r\n                    disabled = {loading ? 1:0}\r\n                    onClick = {(e) => {\r\n                      e.preventDefault();\r\n                      levelUpLip(blockchain.account, item.id);\r\n                    }}>\r\n                      Nivel: {item.level} + 1\r\n                    </s.Button3>\r\n\r\n                    <s.Button3\r\n                    disabled = {loading ? 1:0}\r\n                    onClick = {(e) => {\r\n                      e.preventDefault();\r\n                      vidaUpLip(blockchain.account, item.id);\r\n                    }}>\r\n                      Vida: {item.vida} + 15\r\n                    </s.Button3>\r\n\r\n                    <s.Button3\r\n                    disabled = {loading ? 1:0}\r\n                    onClick = {(e) => {\r\n                      e.preventDefault();\r\n                      habilUpLip(blockchain.account, item.id);\r\n                    }}>\r\n                      Habil: {item.habil} + 3\r\n                    </s.Button3>                    \r\n\r\n                    <s.Button3\r\n                    disabled = {loading ? 1:0}\r\n                    onClick = {(e) => {\r\n                      e.preventDefault();\r\n                      fuerzaUpLip(blockchain.account, item.id);\r\n                    }}>\r\n                      Fuerza: {item.fuerza} +5\r\n                    </s.Button3>\r\n\r\n\r\n                    <s.Button3\r\n                    disabled = {loading ? 1:0}\r\n                    onClick = {(e) => {\r\n                      e.preventDefault();\r\n                      defenzaUpLip(blockchain.account, item.id);\r\n                    }}>\r\n                      Defenza: {item.defenza} + 3\r\n                    </s.Button3>\r\n\r\n                    <s.Button3\r\n                    disabled = {loading ? 1:0}\r\n                    onClick = {(e) => {\r\n                      e.preventDefault();\r\n                      poderUpLip(blockchain.account, item.id);\r\n                    }}>\r\n                      PP: {item.poder} + 10\r\n                    </s.Button3>\r\n\r\n              </s.Container>\r\n          );\r\n        })}\r\n      </s.Container>\r\n    );\r\n};\r\n\r\nexport default Dashboard",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":16,"column":10,"nodeType":"82","messageId":"83","endLine":16,"endColumn":17},{"ruleId":"80","severity":1,"message":"84","line":52,"column":9,"nodeType":"82","messageId":"83","endLine":52,"endColumn":17},{"ruleId":"80","severity":1,"message":"85","line":67,"column":9,"nodeType":"82","messageId":"83","endLine":67,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":111,"column":27,"nodeType":"88","messageId":"89","endLine":111,"endColumn":29},{"ruleId":"90","severity":1,"message":"91","line":114,"column":6,"nodeType":"92","endLine":114,"endColumn":27,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"87","line":132,"column":30,"nodeType":"88","messageId":"89","endLine":132,"endColumn":32},{"ruleId":"86","severity":1,"message":"94","line":47,"column":31,"nodeType":"88","messageId":"89","endLine":47,"endColumn":33},{"ruleId":"95","severity":1,"message":"96","line":7,"column":5,"nodeType":"97","endLine":7,"endColumn":42},{"ruleId":"95","severity":1,"message":"96","line":14,"column":11,"nodeType":"97","endLine":14,"endColumn":71},{"ruleId":"95","severity":1,"message":"96","line":17,"column":11,"nodeType":"97","endLine":17,"endColumn":44},{"ruleId":"95","severity":1,"message":"96","line":20,"column":11,"nodeType":"97","endLine":20,"endColumn":44},{"ruleId":"95","severity":1,"message":"98","line":23,"column":11,"nodeType":"97","endLine":23,"endColumn":44},{"ruleId":"80","severity":1,"message":"99","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":25},{"ruleId":"80","severity":1,"message":"100","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":17},{"ruleId":"80","severity":1,"message":"101","line":9,"column":8,"nodeType":"82","messageId":"83","endLine":9,"endColumn":14},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'mintNFT2' is assigned a value but never used.","'mintNFT3' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'blockchain.account' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["104"],"Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'connect' is defined but never used.","'_color' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [blockchain.account, blockchain.lipToken, dispatch]",{"range":"107","text":"108"},[3504,3525],"[blockchain.account, blockchain.lipToken, dispatch]"]