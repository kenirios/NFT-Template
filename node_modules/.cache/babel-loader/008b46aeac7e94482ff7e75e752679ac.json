{"ast":null,"code":"const initialState = {\n  loading: false,\n  account: null,\n  lipToken: null,\n  web3: null,\n  errorMsg: \"\"\n};\n\nconst blockchainReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return { ...initialState,\n        loading: true\n      };\n\n    case \"CONNECTION_SUCCESS\":\n      return { ...state,\n        loading: false,\n        account: action.payload.account,\n        lipToken: action.payload.lipToken,\n        web3: action.payload.web3\n      };\n\n    case \"CONNECTION_FAILED\":\n      return { ...initialState,\n        loading: false,\n        errorMsg: action.payload\n      };\n\n    case \"UPDATE_ACCOUNT\":\n      return { ...state,\n        account: action.payload.account\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;","map":{"version":3,"sources":["C:/Users/digit/OneDrive/Escritorio/nft/src/redux/blockchain/blockchainReducer.js"],"names":["initialState","loading","account","lipToken","web3","errorMsg","blockchainReducer","state","action","type","payload"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,QAAQ,EAAE,IAHO;AAIjBC,EAAAA,IAAI,EAAE,IAJW;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;;AAQA,MAAMC,iBAAiB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AACxD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,oBAAL;AACI,aAAO,EACH,GAAGT,YADA;AAEHC,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAK,oBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHN,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeR,OAHrB;AAIHC,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAAP,CAAeP,QAJtB;AAKHC,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeN;AALlB,OAAP;;AAQJ,SAAK,mBAAL;AACA,aAAO,EACH,GAAGJ,YADA;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHI,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAHd,OAAP;;AAMA,SAAK,gBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeR;AAFrB,OAAP;;AAKJ;AAAS,aAAOK,KAAP;AA7Bb;AA+BH,CAhCD;;AAkCA,eAAeD,iBAAf","sourcesContent":["const initialState = {\n    loading: false,\n    account: null,\n    lipToken: null, \n    web3: null,\n    errorMsg: \"\",\n}\n\nconst blockchainReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case \"CONNECTION_REQUEST\":\n            return {\n                ...initialState,\n                loading: true, \n            };\n\n        case \"CONNECTION_SUCCESS\":\n            return {\n                ...state,\n                loading: false,\n                account: action.payload.account,\n                lipToken: action.payload.lipToken,\n                web3: action.payload.web3,\n            };\n\n        case \"CONNECTION_FAILED\": \n        return {\n            ...initialState,\n            loading: false,\n            errorMsg: action.payload,\n        }\n\n        case \"UPDATE_ACCOUNT\":\n            return {\n                ...state,\n                account: action.payload.account,\n            };\n\n        default: return state\n    }\n};\n\nexport default blockchainReducer;"]},"metadata":{},"sourceType":"module"}