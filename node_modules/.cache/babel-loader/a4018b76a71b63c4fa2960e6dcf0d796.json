{"ast":null,"code":"const initialState = {\n  loading: false,\n  allLips: [],\n  allOwnerLips: [],\n  error: false,\n  errorMsg: \"\"\n};\n\nconst dataReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return { ...initialState,\n        loading: true\n      };\n\n    case \"CHECK_DATA_SUCCESS\":\n      return { ...initialState,\n        loading: false,\n        allLips: action.payload.allLips,\n        allOwnerLips: action.payload.allOwnerLips\n      };\n\n    case \"CHECK_DATA_FAILED\":\n      return { ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"sources":["C:/Users/digit/OneDrive/Escritorio/nft/src/redux/data/dataReducer.js"],"names":["initialState","loading","allLips","allOwnerLips","error","errorMsg","dataReducer","state","action","type","payload"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,YAAY,EAAE,EAHG;AAIjBC,EAAAA,KAAK,EAAE,KAJU;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;;AAQA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,oBAAL;AACI,aAAO,EACH,GAAGT,YADA;AAEHC,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAK,oBAAL;AACI,aAAO,EACH,GAAGD,YADA;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeR,OAHrB;AAIHC,QAAAA,YAAY,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAJ1B,OAAP;;AAOJ,SAAK,mBAAL;AACI,aAAO,EACH,GAAGH,YADA;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHG,QAAAA,KAAK,EAAE,IAHJ;AAIHC,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAJd,OAAP;;AAOA;AAAS,aAAOH,KAAP;AAvBjB;AAyBH,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["const initialState = {\n    loading: false, \n    allLips: [],\n    allOwnerLips: [], \n    error: false, \n    errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case \"CHECK_DATA_REQUEST\":\n            return {\n                ...initialState,\n                loading: true,\n            };\n\n        case \"CHECK_DATA_SUCCESS\":\n            return {\n                ...initialState, \n                loading: false,\n                allLips: action.payload.allLips,\n                allOwnerLips: action.payload.allOwnerLips,\n            };\n\n        case \"CHECK_DATA_FAILED\": \n            return {\n                ...initialState,\n                loading: false,\n                error: true,\n                errorMsg: action.payload,\n            };\n        \n            default: return state\n    }\n};\n\nexport default dataReducer;"]},"metadata":{},"sourceType":"module"}